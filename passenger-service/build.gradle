plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.jvm'
}

apply from: 'versions.gradle'

ext {
	springCloudVersion = "2024.0.1"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation project(':common-models')
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${versions.springdoc}"
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
//	implementation "me.paulschwarz:spring-dotenv:${versions.dot_env}"
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
	implementation "net.logstash.logback:logstash-logback-encoder:${versions.logstash}"

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'

	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.liquibase:liquibase-core'
	testImplementation "io.rest-assured:rest-assured:${versions.rest_assured}"
	testImplementation "io.cucumber:cucumber-java:${versions.cucumber}"
	testImplementation "io.cucumber:cucumber-junit:${versions.cucumber}"
	testImplementation "io.cucumber:cucumber-junit-platform-engine:${versions.cucumber}"
	testImplementation "org.junit.vintage:junit-vintage-engine:${versions.junit_vintage}"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:kafka'
	testImplementation 'org.testcontainers:postgresql'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
}

tasks.named('test') {
	useJUnitPlatform()
}

kotlin {
    jvmToolchain(21)
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
	}
}
