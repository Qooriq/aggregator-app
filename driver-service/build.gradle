plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

apply from: 'versions.gradle'

ext {
    springCloudVersion = "2024.0.1"
}

configurations {
    cucumberRuntime
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation project(':common-models')
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"
    implementation 'org.springframework.boot:spring-boot-starter-artemis'
    implementation "org.apache.activemq:artemis-jakarta-client:${versions.artemis_mq}"
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation "io.rest-assured:rest-assured:${versions.rest_assured}"
    testImplementation "io.cucumber:cucumber-java:${versions.cucumber}"
    testImplementation "io.cucumber:cucumber-junit:${versions.cucumber}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${versions.cucumber}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${versions.junit_vintage}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:postgresql'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:$springCloudVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
