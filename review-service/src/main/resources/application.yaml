spring:
  application:
    name: review-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5433/review_service}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:root}
  liquibase:
    enabled: false
  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    consumer:
      client-id: 1
  artemis:
    broker-url: ${ARTEMIS_URL:tcp://localhost:61616}
    user: ${ARTEMIS_USERNAME:admin}
    password: ${ARTEMIS_PASSWORD:admin}
    mode: native
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8180/realms/agregator-app
          jwk-set-uri: http://localhost:8180/realms/agregator-app/protocol/openid-connect/certs
passenger-rating:
  limit: 50
  page-number: 0
app:
  kafka-config-info:
    topic-name-passenger: passenger-review-update
    replicas: 1
    partitions: 3
  chrono-update: 0 * * * * ?
  page: 1
  size: 10
server:
  port: ${PORT:8084}
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka/}
feign:
  name:
    passenger: PASSENGER-SERVICE
    driver: DRIVER-SERVICE
    ride: RIDES-SERVICE
management:
  endpoints:
    web:
      exposure:
        include: health,prometheus
  metrics:
    distribution:
      percentiles-histogram:
        "[http.server.requests]": true
  prometheus:
    metrics:
      export:
        enabled: true
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: b3
      produce: b3
    enabled: true
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans